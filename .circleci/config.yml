version: 2.1

orbs:
  silta: silta/silta@0.1

executors:
  cicd73:
    docker:
      - image: eu.gcr.io/silta-images/cicd:circleci-php7.3-node12-composer1-v0.1

workflows:
  version: 2
  commit:
    jobs:
      - silta/drupal-validate:
          name: validate
          executor: cicd73
          post-validation:
            - run: echo "You can add additional validation here!"

      - silta/analyze:
          name: analyze
          context: analyze
          sources: web

      - silta/drupal-build-deploy: &build-deploy
          name: Drupal build & deploy
          executor: cicd73
          silta_config: silta/silta.yml,silta/silta-cms.yml
          codebase-build:
            - silta/drupal-composer-install
            - silta/npm-install-build
          context: silta_dev
          filters:
            branches:
              ignore:
                - production
                - /dependabot\/.*/

      - silta/drupal-build-deploy:
          # Extend the build-deploy configuration for the production environment.
          <<: *build-deploy
          name: Drupal build & deploy production
          silta_config: silta/silta.yml,silta/silta-cms.yml,silta/silta-cms-prod.yml
          context: silta_finland
          filters:
            branches:
              only: production

      - silta/drupal-build-deploy:
          <<: *build-deploy
          name: build-dependabot
          context: silta_dev
          skip-deployment: true
          filters:
            branches:
              only: /dependabot\/.*/

      - silta/frontend-build-deploy: &api-build-deploy
          name: API build & deploy
          context: silta_dev
          silta_config: silta/silta.yml,silta/silta-api.yml
          release-suffix: api
          codebase-build:
            - silta/npm-install-build:
                path: api
          image_build_steps:
            - run:
                name: Set Elasticsearch host
                command: |
                  source $BASH_ENV
                  elasticsearch_host=`echo $RELEASE_NAME | sed -e s/-api//`-es
                  sed -i -e "s/<|elasticsearch_host|>/$elasticsearch_host/g" silta/silta-api.yml
            - silta/build-docker-image:
                dockerfile: 'silta/node.Dockerfile'
                path: './api'
                identifier: 'node'
                docker-hash-prefix: v6
          filters:
            branches:
              ignore:
                - production
                - /dependabot\/.*/

      - silta/frontend-build-deploy:
          # Extend the build-deploy configuration for the production environment.
          <<: *api-build-deploy
          name: API build & deploy production
          context: silta_finland
          silta_config: silta/silta.yml,silta/silta-api.yml,silta/silta-api-prod.yml
          filters:
            branches:
              only: production

      - silta/frontend-build-deploy:
          <<: *api-build-deploy
          name: API build Dependabot
          context: silta_dev
          skip-deployment: true
          filters:
            branches:
              only: /dependabot\/.*/

      - silta/frontend-build-deploy: &client-build-deploy
          name: Frontend build & deploy for test
          context: silta_dev
          silta_config: silta/silta.yml,silta/silta-client.yml
          release-suffix: client-test
          codebase-build:
            - run:
                name: Set Graphql api base url
                command: |
                  # Make sure release name is lowercase without special characters.
                  branchname_lower="${CIRCLE_BRANCH,,}"
                  release_name="${branchname_lower//[^[:alnum:]]/-}"
                  release_name=`echo $release_name | sed -e s/-api//`

                  # If name is too long, truncate it and append a hash
                  if [ ${#release_name} -ge 35 ]; then
                    release_name="$(printf "$release_name" | cut -c 1-34)$(printf "$release_name" | shasum -a 256 | cut -c 1-3 )"
                  fi
                  graphql_api_base_url=`echo $release_name`.decoupled-api.$CLUSTER_DOMAIN
                  echo GRAPHQL_API_BASE_URL="https://${graphql_api_base_url}/" > site/.env.local
            - silta/npm-install-build:
                path: site
          image_build_steps:
            - silta/build-docker-image:
                dockerfile: 'silta/node.Dockerfile'
                path: './site'
                identifier: 'node'
                docker-hash-prefix: v6
          filters:
            branches:
              ignore:
                - production
                - /dependabot\/.*/

      - silta/frontend-build-deploy:
          # Extend the build-deploy configuration for the production environment.
          <<: *client-build-deploy
          name: Frontend build & deploy for test production
          context: silta_finland
          silta_config: silta/silta.yml,silta/silta-client.yml,silta/silta-client-prod.yml
          image_build_steps:
            - silta/build-docker-image:
                dockerfile: 'silta/node.Dockerfile'
                path: './site'
                identifier: 'node'
                docker-hash-prefix: v6
          filters:
            branches:
              only: production

      - silta/frontend-build-deploy:
          <<: *client-build-deploy
          name: Client build Dependabot
          context: silta_dev
          skip-deployment: true
          filters:
            branches:
              only: /dependabot\/.*/
