version: 2
jobs:
  build_and_deploy:
    docker:
      - image: wunderio/circleci-builder

    steps:
      - checkout

      - run: phpcs --standard=phpcs.xml

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.lock" }}

      - run: composer install -n --prefer-dist --ignore-platform-reqs --no-dev

      - save_cache:
          paths:
            - ./vendor
            - ./web/core
            - ./web/modules/contrib
            - ./web/themes/contrib
            - ./web/profiles/contrib
            - ./web/libraries
          key: v1-dependencies-{{ checksum "composer.lock" }}

      - restore_cache:
          keys:
            - v1-yarn-{{ checksum "yarn.lock" }}

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-yarn-{{ checksum "yarn.lock" }}

      # Set environment variables for Kontena CLI.
      - run: |
          BRANCH_SLUG=${CIRCLE_BRANCH//[^[:alnum:]]/-}
          STACK_SLUG=${BRANCH_SLUG#feature-}
          STACK_SLUG=${STACK_SLUG#bug-}
          STACK_SLUG=${STACK_SLUG#hotfix-}
          STACK_SLUG=${STACK_SLUG:0:14}
          PROJECT_SLUG=${CIRCLE_PROJECT_REPONAME//client-/}
          PROJECT_SLUG=${CIRCLE_PROJECT_REPONAME//internal-/}
          PROJECT_SLUG=${PROJECT_SLUG:0:14}
          STACK_NAME="$PROJECT_SLUG-$STACK_SLUG"

          echo "export BRANCH_SLUG=$BRANCH_SLUG" >> $BASH_ENV
          echo "export STACK_NAME=$STACK_NAME" >> $BASH_ENV
          echo "export VIRTUALHOST=${BRANCH_SLUG}.${CIRCLE_PROJECT_REPONAME}.dev.wdr.io" >> $BASH_ENV
          echo "export DRUPALDOCKERIMAGE=wunder/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}" >> $BASH_ENV
          echo "export LOADBALANCER=loadbalancer/dev_lb" >> $BASH_ENV
          echo "export BASICAUTH=wunder:wunder" >> $BASH_ENV

      - setup_remote_docker

      # Build the Docker image and push it to the repository.
      - run: |
          docker login -u $KONTENA_DOCKER_USER -p $KONTENA_DOCKER_PASSWORD images.kontena.io
          kontena stack build --name $STACK_NAME

      # Create the volume for files if needed.
      - run: kontena volume create --driver local --scope stack "${STACK_NAME}_files" || kontena volume show "${STACK_NAME}_files"

      # Create or update the stack for the current branch.
      - run: kontena stack install --name $STACK_NAME || kontena stack upgrade $STACK_NAME

      # Install drupal if needed, alternatively you could import a database dump.
      - run: |
          kontena service exec $STACK_NAME/drupal -- [ `drush status --field=bootstrap` ] || drush site-install -n

      # Run drush commands within the deployed environment.
      - run: |
          kontena service exec $STACK_NAME/drupal -- drush updatedb -n --root=/var/www/html/web
          kontena service exec $STACK_NAME/drupal -- [ -d config/sync ] && drush config-import -n --root=/var/www/html/web
          kontena service exec $STACK_NAME/drupal -- drush entity-updates -n --root=/var/www/html/web

      - run: |
          echo "Deployment successful, your site is available here: http://$VIRTUALHOST"

workflows:
  version: 2
  commit:
    jobs:
      - build_and_deploy:
          context: dev_wdr_io
